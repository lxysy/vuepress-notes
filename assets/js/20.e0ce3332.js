(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{438:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"秒级依赖预构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#秒级依赖预构建"}},[t._v("#")]),t._v(" 秒级依赖预构建")]),t._v(" "),s("p",[t._v("Vite 是一个提倡 "),s("code",[t._v("no-bundle")]),t._v(" 的构建工具，相比于传统的 Webpack，能做到开发时的模块按需编译，而不用先打包完再加载。")]),t._v(" "),s("p",[t._v("我们所说的模块代码其实分为两部分，一部分是源代码，也就是业务代码，另一部分是第三方依赖的代码，即 "),s("code",[t._v("node_modules")]),t._v(" 中的代码。所谓的 "),s("code",[t._v("no-bundle")]),t._v(" "),s("strong",[t._v("只是对于源代码而言")]),t._v("，对于第三方依赖而言，Vite 还是选择 bundle(打包)，并且使用速度极快的打包器 Esbuild 来完成这一过程，达到秒级的依赖编译速度。")]),t._v(" "),s("h2",{attrs:{id:"为什么需要预构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要预构建"}},[t._v("#")]),t._v(" 为什么需要预构建")]),t._v(" "),s("p",[t._v("为什么在开发阶段我们要对第三方依赖进行预构建? 如果不进行预构建会怎么样？")]),t._v(" "),s("p",[t._v("首先 Vite 是基于浏览器原生 ES 模块规范实现的 Dev Server，不论是应用代码，还是第三方依赖的代码，理应符合 ESM 规范才能够正常运行。但我们没有办法控制第三方的打包规范。就目前来看，还有相当多的第三方库仍然没有 ES 版本的产物，比如大名鼎鼎的 "),s("code",[t._v("react")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react 入口文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有 CommonJS 格式")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"production"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./cjs/react.production.min.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./cjs/react.development.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这种 CommonJS 格式的代码在 Vite 当中无法直接运行，我们需要将它转换成 ESM 格式的产物。")]),t._v(" "),s("p",[t._v("此外，还有一个比较重要的问题——"),s("strong",[t._v("请求瀑布流问题")]),t._v("。比如说，知名的"),s("code",[t._v("loadsh-es")]),t._v("库本身是有 ES 版本产物的，可以在 Vite 中直接运行。但实际上，它在加载时会发出特别多的请求，导致页面加载的前几秒几都乎处于卡顿状态，拿一个简单的 demo 项目举例，请求情况如下图所示:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" debounce "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../node_modules/lodash-es/debounce'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handlebtnClick "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们在应用代码中调用了"),s("code",[t._v("debounce")]),t._v("方法，这个方法会依赖很多工具函数。")]),t._v(" "),s("p",[t._v("每个"),s("code",[t._v("import")]),t._v("都会触发一次新的文件请求，因此在这种 "),s("code",[t._v("依赖层级深")]),t._v("、"),s("code",[t._v("涉及模块数量多")]),t._v("的情况下，会触发成百上千个网络请求，巨大的请求量加上 Chrome 对同一个域名下只能同时支持 "),s("code",[t._v("6")]),t._v(" 个 HTTP 并发请求的限制，导致页面加载十分缓慢，与 Vite 主导性能优势的初衷背道而驰。不过，在进行"),s("strong",[t._v("依赖的预构建")]),t._v("之后，"),s("code",[t._v("lodash-es")]),t._v("这个库的代码被打包成了一个文件，这样请求的数量会骤然减少，页面加载也快了许多。下图是进行预构建之后的请求情况，你可以对照看看:")]),t._v(" "),s("p",[t._v("// TODO")]),t._v(" "),s("p",[t._v("依赖预构建主要做了两件事情：")]),t._v(" "),s("p",[t._v("一是将其他格式(如 UMD 和 CommonJS)的产物转换为 ESM 格式，使其在浏览器通过 "),s("code",[t._v('<script type="module"><script>')]),t._v("的方式正常加载。")]),t._v(" "),s("p",[t._v("二是打包第三方库的代码，将各个第三方库分散的文件合并到一起，减少 HTTP 请求数量，避免页面加载性能劣化。")]),t._v(" "),s("p",[t._v("而这两件事情全部由性能优异的 "),s("code",[t._v("Esbuild")]),t._v(" (基于 Golang 开发)完成，而不是传统的 Webpack/Rollup，所以也不会有明显的打包性能问题，反而是 Vite 项目启动飞快(秒级启动)的一个核心原因。")]),t._v(" "),s("blockquote",[s("p",[t._v("Vite 1.x 使用了 Rollup 来进行依赖预构建，在 2.x 版本将 Rollup 换成了 Esbuild，编译速度提升了 "),s("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fesbuild.github.io%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("近 100 倍"),s("OutboundLink")],1),t._v("！")])]),t._v(" "),s("h2",{attrs:{id:"如何开启预构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何开启预构建"}},[t._v("#")]),t._v(" 如何开启预构建")]),t._v(" "),s("p",[t._v("在 Vite 中有两种开启预构建的方式，分别是 "),s("code",[t._v("自动开启")]),t._v(" 和 "),s("code",[t._v("手动开启")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"自动开启"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动开启"}},[t._v("#")]),t._v(" 自动开启"),s("a",{attrs:{href:"https://notes.yueluo.club/vite/index.html#%E8%87%AA%E5%8A%A8%E5%BC%80%E5%90%AF",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("预构建默认是是 "),s("code",[t._v("自动开启")]),t._v("。项目启动成功后，你可以在根目录下的"),s("code",[t._v("node_modules")]),t._v("中发现"),s("code",[t._v(".vite")]),t._v("目录，这就是预构建产物文件存放的目录，内容如下:")]),t._v(" "),s("p",[t._v("在浏览器访问页面后，打开 "),s("code",[t._v("Dev Tools")]),t._v(" 中的网络调试面板，你可以发现第三方包的引入路径已经被重写:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  require_react\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/node_modules/.vite/deps/chunk-QJZGAYR5.js?v=2dc7d6a2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dep:react")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" react_default "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require_react")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  react_default "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//# sourceMappingURL=react.js.map")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);